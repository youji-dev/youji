name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    name: Detect file changes
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'API/**'
              - '.github/workflows/**'
            frontend:
              - 'OBS-Frontend/**'
              - '.github/workflows/**'
  build-api:
    name: API build CI
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore "API/StreamTools API.sln"
      - name: Build
        run: dotnet build "API/StreamTools API.sln" --no-restore -warnaserror

  build-frontend:
    name: Fronend build CI
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "18.18.x"
      - name: Install dependecies
        working-directory: ./OBS-Frontend
        run: npm i
      - name: Build
        working-directory: ./OBS-Frontend
        run: npm run build