services:
  database:
    container_name: Youji_Database
    image: postgres:latest
    hostname: database
    restart: unless-stopped
    networks:
      - database
    volumes:
      - database:/var/lib/postgresql/data
      - ./dockerfiles/demo.sql:/docker-entrypoint-initdb.d/youji.sql
    env_file: .env
    healthcheck:
      interval: 6s
      retries: 5
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      timeout: 6s

  youji-backend:
    container_name: Youji-Backend
    image: ghcr.io/youji-dev/youji-backend:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
      dev-mail:
        condition: service_started
    networks:
      - database
      - mail
    volumes:
      - ./dockerfiles/backend.appsettings.json:/App/appsettings.json

  youji-frontend:
    container_name: Youji-Frontend
    image: ghcr.io/youji-dev/youji-frontend:latest
    ports:
      - "3000:3000"
    depends_on:
      - youji-backend
    restart: unless-stopped
    environment:
      - NUXT_PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL}

networks:
  database:
    internal: true

volumes:
  database:
